{"ast":null,"code":"var _jsxFileName = \"/Users/sarlot/Desktop/Programming/freecodecamp/3-FrontEnd-Development-Libraries/4-JavaScript-calculator/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projectName = 'javascript-calculator';\nconst num = [7, 8, 9, 4, 5, 6, 1, 2, 3, 0];\nconst oper = ['/', '*', '-', '+'];\nconst ids = {\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  0: 'zero',\n  '/': 'divide',\n  '*': 'multiply',\n  '-': 'subtract',\n  '+': 'add'\n};\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      const {\n        currentNumber,\n        lastPressed,\n        calc,\n        prevNumbec,\n        operation\n      } = this.state;\n      const {\n        innerText\n      } = e.target;\n\n      switch (innerText) {\n        case 'AC':\n          {\n            this.setState({\n              calc: '0'\n            });\n            break;\n          }\n\n        case '+/-':\n          {\n            this.setState({});\n            break;\n          }\n\n        case '%':\n          {\n            this.setState({});\n            break;\n          }\n\n        case '=':\n          {\n            const evaluated = eval(calc);\n            this.setState({\n              calc: evaluated\n            });\n            break;\n          }\n\n        case '.':\n          {\n            const splitted = calc.split(/[\\+\\-\\*\\/]/);\n            const last = splitted.slice(-1)[0];\n\n            if (!last.includes('.')) {\n              this.setState({\n                calc: calc + '.'\n              });\n            }\n\n            break;\n          }\n\n        default:\n          {\n            let e = undefined;\n\n            if (oper.includes(innerText)) {\n              if (oper.includes(lastPressed) && innerText !== '-') {\n                const lastNumberIdx = calc.split('').reverse().findIndex(char => char !== ' ' && num.includes(+char));\n                e = calc.slice(0, calc.length - lastNumberIdx) + ` ${innerText} `;\n              } else {\n                e = `${calc} ${innerText} `;\n              }\n            } else {\n              e = calc === '0' ? innerText : calc + innerText;\n            }\n\n            this.setState({\n              calc: e\n            });\n          }\n      } //Switch end\n\n\n      this.setState({\n        lastPressed: innerText\n      });\n    };\n\n    this.state = {\n      currentNumber: '',\n      //Dont need\n      lastPressed: undefined,\n      calc: '0',\n      prevNumber: undefined,\n      //Dont need\n      operation: undefined\n    };\n  }\n\n  //Handle end\n  render() {\n    const {\n      currentNumber,\n      lastPressed,\n      calc,\n      prevNumbec,\n      operation\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: 'absolute',\n            top: 0\n          },\n          children: JSON.stringify(this.state, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-5 calculator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"display\",\n            id: \"display\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"calc-num\",\n              children: [currentNumber, \" \", operation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"current-num\",\n              children: calc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"c-grey\",\n              id: \"clear\",\n              onClick: this.handleClick,\n              children: \"AC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"c-grey\",\n              onClick: this.handleClick,\n              children: \"+/-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"c-grey\",\n              onClick: this.handleClick,\n              children: \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), num.map(numb => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${numb == 0 && 'zero'}`,\n              onClick: this.handleClick,\n              id: ids[numb],\n              children: numb\n            }, numb, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"c-grey\",\n              id: \"decimal\",\n              onClick: this.handleClick,\n              children: \".\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"oper-container\",\n            children: [oper.map(op => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"c-orange\",\n              id: ids[op],\n              onClick: this.handleClick,\n              children: op\n            }, op, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"c-orange\",\n              id: \"equals\",\n              onClick: this.handleClick,\n              children: \"=\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Charlotte Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n} //ReactDOM.render(<Calculator/>, document.getElementById('app'));\n\n\nexport default App;","map":{"version":3,"sources":["/Users/sarlot/Desktop/Programming/freecodecamp/3-FrontEnd-Development-Libraries/4-JavaScript-calculator/src/App.js"],"names":["React","projectName","num","oper","ids","Calculator","Component","constructor","props","handleClick","e","currentNumber","lastPressed","calc","prevNumbec","operation","state","innerText","target","setState","evaluated","eval","splitted","split","last","slice","includes","undefined","lastNumberIdx","reverse","findIndex","char","length","prevNumber","render","position","top","JSON","stringify","map","numb","op","App"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\n\nconst projectName = 'javascript-calculator';\nconst num = [7, 8, 9, 4, 5, 6, 1, 2, 3, 0];\nconst oper = ['/', '*', '-', '+'];\nconst ids = {\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  0: 'zero',\n  '/': 'divide',\n  '*': 'multiply',\n  '-': 'subtract',\n  '+': 'add'\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentNumber: '', //Dont need\n      lastPressed: undefined,\n      calc: '0',\n      prevNumber: undefined, //Dont need\n      operation: undefined\n    }\n  }\n  \n  handleClick = (e) => {\n    const {currentNumber, lastPressed, calc, prevNumbec, operation} = this.state;\n    const {innerText} = e.target;\n    \n    switch(innerText) {\n        case 'AC': {\n          this.setState({\n            calc: '0',\n          });\n          break;\n        }\n      case '+/-': {\n        this.setState({\n          \n        });\n        break;\n      }\n      case '%': {\n        this.setState({\n          \n        });\n        break;\n      }\n      case '=': {\n        const evaluated = eval(calc);\n        this.setState({\n          calc: evaluated\n        });\n        break;\n      }\n      case '.': {\n        const splitted = calc.split(/[\\+\\-\\*\\/]/);\n        const last = splitted.slice(-1)[0];\n        \n        if(!last.includes('.')) {\n          this.setState({\n            calc: calc+'.'\n          })\n        }\n        \n        break;\n      }\n      default: {\n        let e = undefined;\n        if(oper.includes(innerText)) {\n          if(oper.includes(lastPressed) && innerText !== '-') {\n\n            const lastNumberIdx = calc.split('').reverse()\n                .findIndex(char => char !== ' ' && num.includes(+char)); \n            e = calc.slice(0, calc.length - lastNumberIdx) + ` ${innerText} `;\n          } else {\n            e = `${calc} ${innerText} `;\n          }\n        } else {\n          e = (calc === '0') ? innerText : (calc + innerText);\n        }\n        \n        this.setState({\n          calc: e\n        });\n      }\n    } //Switch end\n    this. setState({\n      lastPressed: innerText\n    })\n  } //Handle end\n\n  render () {\n    const {currentNumber, lastPressed, calc, prevNumbec, operation} = this.state;\n    \n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <p style={{position: 'absolute', top: 0}}>{JSON.stringify(this.state, null,2)}</p>\n          <div className=\"col-5 calculator\">\n            <div className=\"display\" id=\"display\">\n              <p id=\"calc-num\">{currentNumber} {operation}</p>\n              <p id=\"current-num\">{calc}</p>\n            </div>\n            \n            <div className=\"number-container\">\n              <button\n                className=\"c-grey\"\n                id =\"clear\"\n                onClick={this.handleClick}\n              >\n                AC\n              </button>\n              \n              <button id=\"c-grey\" onClick={this.handleClick}>+/-</button>\n              <button id=\"c-grey\" onClick={this.handleClick}>%</button>\n              \n                {num.map(numb => (\n                <button\n                  className={`${numb == 0 && 'zero'}`}\n                  key={numb}\n                  onClick={this.handleClick}\n                  id={ids[numb]}\n                >\n                  {numb}\n                </button>\n                ))}\n              \n              <button\n                className=\"c-grey\"\n                id=\"decimal\"\n                onClick={this.handleClick}\n              >\n                .\n              </button>\n            </div> \n            \n              <div className=\"oper-container\">\n                {oper.map(op => (\n                <button\n                  className=\"c-orange\"\n                  id={ids[op]}\n                  key={op}\n                  onClick={this.handleClick}\n                 >\n                    {op}\n                 </button>\n                ))} \n                  <button\n                    className=\"c-orange\"\n                    id=\"equals\"\n                    onClick={this.handleClick}\n                  >\n                    =\n                  </button>\n              </div> \n          </div>\n          </div> \n        \n        <div className=\"footer\">\n          <p>Charlotte Calculator</p>\n        </div>\n      </div> \n    )\n  }\n}\n\n//ReactDOM.render(<Calculator/>, document.getElementById('app'));\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}